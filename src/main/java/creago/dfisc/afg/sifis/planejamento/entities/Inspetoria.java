package creago.dfisc.afg.sifis.planejamento.entities;
// Generated 10/06/2014 11:59:13 by Hibernate Tools 3.6.0


import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

/**
 * Inspetoria generated by hbm2java
 */
public class Inspetoria  implements java.io.Serializable {


     private Long idinspetoria;
     private String nome;
     private Set<Fiscal> fiscals = new HashSet(0);
     private Set<Rota> rotas = new HashSet(0);
     private Set<Cidade> cidades = new HashSet(0);

    public Inspetoria() {
    }

	
    public Inspetoria(String nome) {
        this.nome = nome;
    }
    public Inspetoria(String nome, Set<Fiscal> fiscals, Set<Rota> rotas, Set<Cidade> cidades) {
       this.nome = nome;
       this.fiscals = fiscals;
       this.rotas = rotas;
       this.cidades = cidades;
    }
   
    public Long getIdinspetoria() {
        return this.idinspetoria;
    }
    
    public void setIdinspetoria(Long idinspetoria) {
        this.idinspetoria = idinspetoria;
    }
    public String getNome() {
        return this.nome;
    }
    
    public void setNome(String nome) {
        this.nome = nome;
    }
    public Set<Fiscal> getFiscals() {
        return this.fiscals;
    }
    
    public void setFiscals(Set<Fiscal> fiscals) {
        this.fiscals = fiscals;
    }
    public Set<Rota> getRotas() {
        return this.rotas;
    }
    
    public void setRotas(Set<Rota> rotas) {
        this.rotas = rotas;
    }
    public Set<Cidade> getCidades() {
        return this.cidades;
    }
    
    public void setCidades(Set<Cidade> cidades) {
        this.cidades = cidades;
    }

    public void validate() {
        if(nome == null){
            throw new IllegalArgumentException("Nome cannot be null");
        }
    }

    @Override
    public int hashCode() {
        int hash = 3;
        hash = 11 * hash + Objects.hashCode(this.idinspetoria);
        hash = 11 * hash + Objects.hashCode(this.nome);
        hash = 11 * hash + Objects.hashCode(this.fiscals);
        hash = 11 * hash + Objects.hashCode(this.rotas);
        hash = 11 * hash + Objects.hashCode(this.cidades);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Inspetoria other = (Inspetoria) obj;
        if (!Objects.equals(this.idinspetoria, other.idinspetoria)) {
            return false;
        }
        if (!Objects.equals(this.nome, other.nome)) {
            return false;
        }
        if (!Objects.equals(this.fiscals, other.fiscals)) {
            return false;
        }
        if (!Objects.equals(this.rotas, other.rotas)) {
            return false;
        }
        if (!Objects.equals(this.cidades, other.cidades)) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "Inspetoria{" + "idinspetoria=" + idinspetoria + ", nome=" + nome
                + ", fiscals=" + fiscals + ", rotas=" + rotas + ", cidades="
                + cidades + '}';
    }
}


