package creago.dfisc.afg.sifis.planejamento.entities;
// Generated 10/06/2014 11:59:13 by Hibernate Tools 3.6.0

import java.util.Objects;

/**
 * Usuario generated by hbm2java
 */
public class Usuario  implements java.io.Serializable {


     private Long idusuario;
     private Fiscal fiscal;
     private String username;
     private String password;
     private String authority;
     private String nome;
     private String sobrenome;
     private Integer matricula;
     private String email;
     private String avatar;

    public Usuario() {
    }

	
    public Usuario(String username, String password, String authority,
            String nome, String sobrenome, Integer matricula, String email) {
        this.username = username;
        this.password = password;
        this.authority = authority;
        this.nome = nome;
        this.sobrenome = sobrenome;
        this.matricula = matricula;
        this.email = email;
    }
    public Usuario(Fiscal fiscal, String username, String password, String authority,
            String nome, String sobrenome, Integer matricula, String email, String avatar) {
       this.fiscal = fiscal;
       this.username = username;
       this.password = password;
       this.authority = authority;
       this.nome = nome;
       this.sobrenome = sobrenome;
       this.matricula = matricula;
       this.email = email;
       this.avatar = avatar;
    }
   
    public Long getIdusuario() {
        return this.idusuario;
    }
    
    public void setIdusuario(Long idusuario) {
        this.idusuario = idusuario;
    }
    public Fiscal getFiscal() {
        return this.fiscal;
    }
    
    public void setFiscal(Fiscal fiscal) {
        this.fiscal = fiscal;
    }
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }
    public String getAuthority() {
        return this.authority;
    }
    
    public void setAuthority(String authority) {
        this.authority = authority;
    }
    public String getNome() {
        return this.nome;
    }
    
    public void setNome(String nome) {
        this.nome = nome;
    }
    public String getSobrenome() {
        return this.sobrenome;
    }
    
    public void setSobrenome(String sobrenome) {
        this.sobrenome = sobrenome;
    }
    public Integer getMatricula() {
        return this.matricula;
    }
    
    public void setMatricula(Integer matricula) {
        this.matricula = matricula;
    }
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }
    public String getAvatar() {
        return this.avatar;
    }
    
    public void setAvatar(String avatar) {
        this.avatar = avatar;
    }

    public void validate() {
        if (nome == null || username == null || password == null || authority == null
                || sobrenome == null || email == null || matricula == null) {
            throw new IllegalArgumentException("Nome, Username, Password, Authority,"
                    + " Sobrenome, Matr√≠cula and Email cannot be null");
        }
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 23 * hash + Objects.hashCode(this.idusuario);
        hash = 23 * hash + Objects.hashCode(this.fiscal);
        hash = 23 * hash + Objects.hashCode(this.username);
        hash = 23 * hash + Objects.hashCode(this.password);
        hash = 23 * hash + Objects.hashCode(this.authority);
        hash = 23 * hash + Objects.hashCode(this.nome);
        hash = 23 * hash + Objects.hashCode(this.sobrenome);
        hash = 23 * hash + Objects.hashCode(this.matricula);
        hash = 23 * hash + Objects.hashCode(this.email);
        hash = 23 * hash + Objects.hashCode(this.avatar);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Usuario other = (Usuario) obj;
        if (!Objects.equals(this.idusuario, other.idusuario)) {
            return false;
        }
        if (!Objects.equals(this.fiscal, other.fiscal)) {
            return false;
        }
        if (!Objects.equals(this.username, other.username)) {
            return false;
        }
        if (!Objects.equals(this.password, other.password)) {
            return false;
        }
        if (!Objects.equals(this.authority, other.authority)) {
            return false;
        }
        if (!Objects.equals(this.nome, other.nome)) {
            return false;
        }
        if (!Objects.equals(this.sobrenome, other.sobrenome)) {
            return false;
        }
        if (!Objects.equals(this.matricula, other.matricula)) {
            return false;
        }
        if (!Objects.equals(this.email, other.email)) {
            return false;
        }
        if (!Objects.equals(this.avatar, other.avatar)) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "Usuario{" + "idusuario=" + idusuario + ", fiscal=" + fiscal
                + ", username=" + username + ", password=" + password
                + ", authority=" + authority + ", nome=" + nome + ", sobrenome="
                + sobrenome + ", matricula=" + matricula + ", email=" + email
                + ", avatar=" + avatar + '}';
    }
    
}