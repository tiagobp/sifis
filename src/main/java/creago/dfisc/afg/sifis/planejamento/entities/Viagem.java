package creago.dfisc.afg.sifis.planejamento.entities;
// Generated 10/06/2014 11:59:13 by Hibernate Tools 3.6.0

import java.util.Date;
import java.util.Objects;
import org.springframework.stereotype.Component;

/**
 * Viagem generated by hbm2java
 */
@Component
public class Viagem implements java.io.Serializable {

    private Long idviagem;
    private Fiscal fiscal;
    private Rota rota;
    private Categoria categoria;
    private Date inicio;
    private Date fim;

    public Viagem() {
    }

    public Viagem(Fiscal fiscal, Rota rota, Categoria categoria, Date inicio, Date fim) {
        this.fiscal = fiscal;
        this.rota = rota;
        this.categoria = categoria;
        this.inicio = inicio;
        this.fim = fim;
    }

    public Long getIdviagem() {
        return this.idviagem;
    }

    public void setIdviagem(Long idviagem) {
        this.idviagem = idviagem;
    }

    public Fiscal getFiscal() {
        return this.fiscal;
    }

    public void setFiscal(Fiscal fiscal) {
        this.fiscal = fiscal;
    }

    public Rota getRota() {
        return this.rota;
    }

    public void setRota(Rota rota) {
        this.rota = rota;
    }

    public Categoria getCategoria() {
        return this.categoria;
    }

    public void setCategoria(Categoria categoria) {
        this.categoria = categoria;
    }

    public Date getInicio() {
        return this.inicio;
    }

    public void setInicio(Date inicio) {
        this.inicio = inicio;
    }

    public Date getFim() {
        return this.fim;
    }

    public void setFim(Date fim) {
        this.fim = fim;
    }

    public void validate() {
        if (fiscal == null || rota == null || categoria == null || inicio == null
                || fim == null) {
            throw new IllegalArgumentException("Fiscal, Rota, Categoria,"
                    + " Data de In√≠cio and Data de Fim cannot be null");
        }
    }

    @Override
    public int hashCode() {
        int hash = 3;
        hash = 59 * hash + Objects.hashCode(this.idviagem);
        hash = 59 * hash + Objects.hashCode(this.fiscal);
        hash = 59 * hash + Objects.hashCode(this.rota);
        hash = 59 * hash + Objects.hashCode(this.categoria);
        hash = 59 * hash + Objects.hashCode(this.inicio);
        hash = 59 * hash + Objects.hashCode(this.fim);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Viagem other = (Viagem) obj;
        if (!Objects.equals(this.idviagem, other.idviagem)) {
            return false;
        }
        if (!Objects.equals(this.fiscal, other.fiscal)) {
            return false;
        }
        if (!Objects.equals(this.rota, other.rota)) {
            return false;
        }
        if (!Objects.equals(this.categoria, other.categoria)) {
            return false;
        }
        if (!Objects.equals(this.inicio, other.inicio)) {
            return false;
        }
        if (!Objects.equals(this.fim, other.fim)) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "Viagem{" + "idviagem=" + idviagem + ", fiscal=" + fiscal + ","
                + " rota=" + rota + ", categoria=" + categoria + ", inicio="
                + inicio + ", fim=" + fim + '}';
    }
    
}
